sum(duplicated(m$StudyNumber))
m$Unique_ID = apply(m, 1, function(x) paste(x['StudyNumber'], x['studyID'],sep='_'))
CMAL = CMAL[,c('StudyNumber','studyID','Timetodeathhrs')]
CMAL$Unique_ID = apply(m, 1, function(x) paste(x['StudyNumber'], x['studyID'],sep='_'))
library(coxme)
CMAL=readstata13::read.dta13('~/Dropbox/Datasets/Malaria Core/DBallCore2016_V3.dta')
CMAL = CMAL[,c('StudyNumber','studyID','Timetodeathhrs')]
load('RData/Data.RData')
m$coma[is.na(m$coma) & m$studyID=='AQ'] = 0
m$Unique_ID = apply(m, 1, function(x) paste(x['StudyNumber'], x['studyID'],sep='_'))
CMAL$Unique_ID = apply(CMAL, 1, function(x) paste(x['StudyNumber'], x['studyID'],sep='_'))
View(CMAL)
View(m)
m = merge(m, CMAL, by='Unique_ID')
View(m)
table(m$outcome)
time_death_NA = is.na(m$Timetodeathhrs) & m$outcome==1
sum(time_death_NA)
m = m[!time_death_NA, ]
vars = c('HCT','LPAR_pct','coma' ,'convulsions',
'poedema','BUN','BD' ,'shock','hypoglycaemia',
'drug_AS')
mod0 = coxme(Surv(time=Timetodeathhrs, event=outcome,type = 'right') ~
vars + (1 | studyID) + (1 | country),
data = m)
library(coxme)
CMAL=readstata13::read.dta13('~/Dropbox/Datasets/Malaria Core/DBallCore2016_V3.dta')
CMAL = CMAL[,c('StudyNumber','studyID','Timetodeathhrs')]
load('RData/Data.RData')
m$coma[is.na(m$coma) & m$studyID=='AQ'] = 0
m$Unique_ID = apply(m, 1, function(x) paste(x['StudyNumber'], x['studyID'],sep='_'))
CMAL$Unique_ID = apply(CMAL, 1, function(x) paste(x['StudyNumber'], x['studyID'],sep='_'))
m = merge(m, CMAL[,c('Unique_ID','Timetodeathhrs')], by='Unique_ID')
time_death_NA = is.na(m$Timetodeathhrs) & m$outcome==1
m = m[!time_death_NA, ]
vars = c('HCT','LPAR_pct','coma' ,'convulsions',
'poedema','BUN','BD' ,'shock','hypoglycaemia',
'drug_AS')
mod0 = coxme(Surv(time=Timetodeathhrs, event=outcome,type = 'right') ~
vars + (1 | studyID) + (1 | country),
data = m)
mod0 = coxme(Surv(time=Timetodeathhrs, event=outcome,type = 'right') ~
HCT + LPAR_pct + coma + convulsions + poedema +
log2(BUN) + BD + shock + hypoglycaemia +
drug_AS + (1 | studyID) + (1 | country),
data = m)
mod0 = coxme(Surv(time=Timetodeathhrs, event=outcome,type = 'right') ~
HCT + LPAR_pct + coma + convulsions + poedema +
log2(BUN) + BD + shock + hypoglycaemia +
(1 | studyID) + (1 | country),
data = m)
complete = apply(m[,vars], 1, function(x) sum(is.na(x))==0)
library(coxme)
CMAL=readstata13::read.dta13('~/Dropbox/Datasets/Malaria Core/DBallCore2016_V3.dta')
CMAL = CMAL[,c('StudyNumber','studyID','Timetodeathhrs')]
load('RData/Data.RData')
m$coma[is.na(m$coma) & m$studyID=='AQ'] = 0
m$Unique_ID = apply(m, 1, function(x) paste(x['StudyNumber'], x['studyID'],sep='_'))
CMAL$Unique_ID = apply(CMAL, 1, function(x) paste(x['StudyNumber'], x['studyID'],sep='_'))
m = merge(m, CMAL[,c('Unique_ID','Timetodeathhrs')], by='Unique_ID')
time_death_NA = is.na(m$Timetodeathhrs) & m$outcome==1
m = m[!time_death_NA, ]
vars = c('HCT','LPAR_pct','coma' ,'convulsions',
'poedema','BUN','BD' ,'shock','hypoglycaemia')
complete = apply(m[,vars], 1, function(x) sum(is.na(x))==0)
m = m[complete,]
mod0 = coxme(Surv(time=Timetodeathhrs, event=outcome,type = 'right') ~
HCT + LPAR_pct + coma + convulsions + poedema +
log2(BUN) + BD + shock + hypoglycaemia +
(1 | studyID) + (1 | country),
data = m)
mod0 = coxme(Surv(time=Timetodeathhrs, event=outcome,type = 'right') ~
HCT + coma + convulsions + poedema +
log2(BUN) + BD + shock + hypoglycaemia +
(1 | studyID) + (1 | country),
data = m)
summary(mod0)
library(coxme)
CMAL=readstata13::read.dta13('~/Dropbox/Datasets/Malaria Core/DBallCore2016_V3.dta')
CMAL = CMAL[,c('StudyNumber','studyID','Timetodeathhrs')]
load('RData/Data.RData')
m$coma[is.na(m$coma) & m$studyID=='AQ'] = 0
m$Unique_ID = apply(m, 1, function(x) paste(x['StudyNumber'], x['studyID'],sep='_'))
CMAL$Unique_ID = apply(CMAL, 1, function(x) paste(x['StudyNumber'], x['studyID'],sep='_'))
m = merge(m, CMAL[,c('Unique_ID','Timetodeathhrs')], by='Unique_ID')
time_death_NA = is.na(m$Timetodeathhrs) & m$outcome==1
m = m[!time_death_NA, ]
#### ---
## Impute
# Base deficit from bicarbonate
BD_and_bicarbonate = !is.na(m$BD) & !is.na(m$bicarbonate)
mod_impute1 = lmer(BD ~ bicarbonate + (1 | studyID) + (1 | country),
data= m[BD_and_bicarbonate,])
# Base deficit and lactate
BD_and_lactate = !is.na(m$BD) & !is.na(m$lactate)
mod_impute2 = lmer(BD ~ lactate + (1 | country),
data= m[BD_and_lactate,])
# Base deficit and rr
BD_and_rr = !is.na(m$BD) & !is.na(m$rr)
mod_impute3 = lmer(BD ~ rr + (1 | studyID) + (1 | country),
data= m[BD_and_rr,])
ind1 = is.na(m$BD) & !is.na(m$bicarbonate)
ind2 = !ind1 & is.na(m$BD) & !is.na(m$lactate)
ind3 = !ind1 & !ind2 & is.na(m$BD) & !is.na(m$rr)
# BUN and creatinine
BUN_and_cr = !is.na(m$BUN) & !is.na(m$creatinine)
mod_impute4 = lmer(log(BUN) ~ creatinine + (1 | studyID) + (1 | country),
data= m[BUN_and_cr,])
ind4 = is.na(m$BUN) & !is.na(m$creatinine)
# Age from HCT
HCT_and_Age = !is.na(m$AgeInYear) & !is.na(m$HCT)
mod_impute5 = lmer(HCT ~ AgeInYear + (1 | studyID) + (1 | country),
data = m[HCT_and_Age,])
ind5 = is.na(m$HCT) & !is.na(m$AgeInYear)
# marginal distribution of BD to impute remaining
BD_alone = !is.na(m$BD)
mod_impute6 = lmer(BD ~ AgeInYear + (1 | studyID) + (1 | country),
data = m[BD_alone,])
ind6 = !ind1 & !ind2 & !ind3 & is.na(m$BD)
# marginal distribution of coma
Coma_alone = !is.na(m$coma)
mod_impute7 = glmer(coma ~ AgeInYear + hypoglycaemia + (1 | studyID) + (1 | country),
family = 'binomial',
data = m[Coma_alone,])
ind7 = is.na(m$coma)
# marginal distribution of LPAR_pct
LPAR_pct_alone = !is.na(m$LPAR_pct)
mod_impute8 = lmer(LPAR_pct ~ AgeInYear + (1 | studyID) + (1 | country),
data = m[LPAR_pct_alone,])
ind8 = is.na(m$LPAR_pct)
# marginal distribution of LPAR_pct
Hypoglycaemia_alone = !is.na(m$hypoglycaemia)
mod_impute9 = glmer(hypoglycaemia ~ 1 + (1 | studyID) + (1 | country),
data = m[Hypoglycaemia_alone,], family='binomial')
ind9 = is.na(m$hypoglycaemia)
# marginal distribution of BUN
BUN_alone = !is.na(m$BUN)
mod_impute10 = lmer(log(BUN) ~ 1 + (1 | studyID) + (1 | country),
data = m[BUN_alone,])
ind10 = !ind4 & is.na(m$BUN)
Imp_data = m
# BD from bicarbonate
coefs1 = summary(mod_impute1)$coefficients
Imp_data$BD[ind1] = rnorm(n = sum(ind1),
mean = predict(mod_impute1, newdata = m[ind1,]),
sd = coefs1[1,'Std. Error'] +
coefs1[2,'Std. Error']*m$bicarbonate[ind1])
# BD from lactate
coefs2 = summary(mod_impute2)$coefficients
Imp_data$BD[ind2] = rnorm(n = sum(ind2),
mean = predict(mod_impute2, newdata = m[ind2,],allow.new.levels=T),
sd = coefs2[1,'Std. Error'] +
coefs2[2,'Std. Error']*m$lactate[ind2])
# BD from respiratory rate
coefs3 = summary(mod_impute3)$coefficients
Imp_data$BD[ind3] = rnorm(n = sum(ind3),
mean = predict(mod_impute3, newdata = m[ind3,],allow.new.levels=T),
sd = coefs3[1,'Std. Error'] +
coefs3[2,'Std. Error']*m$rr[ind3])
# BUN from creatinine
coefs4 = summary(mod_impute4)$coefficients
Imp_data$BUN[ind4] = exp(rnorm(n = sum(ind4),
mean = predict(mod_impute4, newdata = m[ind4,],allow.new.levels=T),
sd = coefs4[1,'Std. Error'] +
coefs4[2,'Std. Error']*m$creatinine[ind4]))
# HCT from Age
coefs5 = summary(mod_impute5)$coefficients
Imp_data$HCT[ind5] = rnorm(n = sum(ind5),
mean = predict(mod_impute5, newdata = m[ind5,],allow.new.levels=T),
sd = coefs5[1,'Std. Error'] +
coefs5[2,'Std. Error']*m$AgeInYear[ind5])
# BD from age
coefs6 = summary(mod_impute6)$coefficients
Imp_data$BD[ind6] = rnorm(n = sum(ind6),
mean = predict(mod_impute6, newdata = m[ind6,],allow.new.levels=T),
sd = coefs6[1,'Std. Error'] +
coefs6[2,'Std. Error']*m$AgeInYear[ind6])
# Coma from hypoglycaemia
coefs7 = summary(mod_impute7)$coefficients
Imp_data$coma[ind7] = rbinom(n = sum(ind7), size = 1,
predict(mod_impute7, newdata = m[ind7,],
allow.new.levels=T, type='response'))
# Parasitaemia from age
coefs8 = summary(mod_impute8)$coefficients
Imp_data$LPAR_pct[ind8] = rnorm(n = sum(ind8),
mean = predict(mod_impute8,
newdata = m[ind8,],
allow.new.levels=T),
sd = coefs8[1,'Std. Error'] +
coefs8[2,'Std. Error']*m$AgeInYear[ind8])
# Hypoglycaemia: marginal
coefs9 = summary(mod_impute9)$coefficients
Imp_data$hypoglycaemia[ind9] = rbinom(n = sum(ind9),size = 1,
prob = predict(mod_impute9,
newdata = m[ind9,],
allow.new.levels=T,
type='response'))
# BUN: marginal
coefs10 = summary(mod_impute10)$coefficients
Imp_data$BUN[ind10] = exp(rnorm(n = sum(ind10),
mean = predict(mod_impute10, newdata = m[ind10,],
allow.new.levels=T),
sd = coefs10[1,'Std. Error']))
m = Imp_data
vars = c('HCT','LPAR_pct','coma' ,'convulsions',
'poedema','BUN','BD' ,'shock','hypoglycaemia')
complete = apply(m[,vars], 1, function(x) sum(is.na(x))==0)
m = m[complete,]
library(coxme)
CMAL=readstata13::read.dta13('~/Dropbox/Datasets/Malaria Core/DBallCore2016_V3.dta')
CMAL = CMAL[,c('StudyNumber','studyID','Timetodeathhrs')]
load('RData/Data.RData')
m$coma[is.na(m$coma) & m$studyID=='AQ'] = 0
m$Unique_ID = apply(m, 1, function(x) paste(x['StudyNumber'], x['studyID'],sep='_'))
CMAL$Unique_ID = apply(CMAL, 1, function(x) paste(x['StudyNumber'], x['studyID'],sep='_'))
m = merge(m, CMAL[,c('Unique_ID','Timetodeathhrs')], by='Unique_ID')
time_death_NA = is.na(m$Timetodeathhrs) & m$outcome==1
m = m[!time_death_NA, ]
m$LPAR_pct[is.infinite(m$LPAR_pct)] = 0
#### ---
## Impute
# Base deficit from bicarbonate
BD_and_bicarbonate = !is.na(m$BD) & !is.na(m$bicarbonate)
mod_impute1 = lmer(BD ~ bicarbonate + (1 | studyID) + (1 | country),
data= m[BD_and_bicarbonate,])
# Base deficit and lactate
BD_and_lactate = !is.na(m$BD) & !is.na(m$lactate)
mod_impute2 = lmer(BD ~ lactate + (1 | country),
data= m[BD_and_lactate,])
# Base deficit and rr
BD_and_rr = !is.na(m$BD) & !is.na(m$rr)
mod_impute3 = lmer(BD ~ rr + (1 | studyID) + (1 | country),
data= m[BD_and_rr,])
ind1 = is.na(m$BD) & !is.na(m$bicarbonate)
ind2 = !ind1 & is.na(m$BD) & !is.na(m$lactate)
ind3 = !ind1 & !ind2 & is.na(m$BD) & !is.na(m$rr)
# BUN and creatinine
BUN_and_cr = !is.na(m$BUN) & !is.na(m$creatinine)
mod_impute4 = lmer(log(BUN) ~ creatinine + (1 | studyID) + (1 | country),
data= m[BUN_and_cr,])
ind4 = is.na(m$BUN) & !is.na(m$creatinine)
# Age from HCT
HCT_and_Age = !is.na(m$AgeInYear) & !is.na(m$HCT)
mod_impute5 = lmer(HCT ~ AgeInYear + (1 | studyID) + (1 | country),
data = m[HCT_and_Age,])
ind5 = is.na(m$HCT) & !is.na(m$AgeInYear)
# marginal distribution of BD to impute remaining
BD_alone = !is.na(m$BD)
mod_impute6 = lmer(BD ~ AgeInYear + (1 | studyID) + (1 | country),
data = m[BD_alone,])
ind6 = !ind1 & !ind2 & !ind3 & is.na(m$BD)
# marginal distribution of coma
Coma_alone = !is.na(m$coma)
mod_impute7 = glmer(coma ~ AgeInYear + hypoglycaemia + (1 | studyID) + (1 | country),
family = 'binomial',
data = m[Coma_alone,])
ind7 = is.na(m$coma)
# marginal distribution of LPAR_pct
LPAR_pct_alone = !is.na(m$LPAR_pct)
mod_impute8 = lmer(LPAR_pct ~ AgeInYear + (1 | studyID) + (1 | country),
data = m[LPAR_pct_alone,])
ind8 = is.na(m$LPAR_pct)
# marginal distribution of LPAR_pct
Hypoglycaemia_alone = !is.na(m$hypoglycaemia)
mod_impute9 = glmer(hypoglycaemia ~ 1 + (1 | studyID) + (1 | country),
data = m[Hypoglycaemia_alone,], family='binomial')
ind9 = is.na(m$hypoglycaemia)
# marginal distribution of BUN
BUN_alone = !is.na(m$BUN)
mod_impute10 = lmer(log(BUN) ~ 1 + (1 | studyID) + (1 | country),
data = m[BUN_alone,])
ind10 = !ind4 & is.na(m$BUN)
Imp_data = m
# BD from bicarbonate
coefs1 = summary(mod_impute1)$coefficients
Imp_data$BD[ind1] = rnorm(n = sum(ind1),
mean = predict(mod_impute1, newdata = m[ind1,]),
sd = coefs1[1,'Std. Error'] +
coefs1[2,'Std. Error']*m$bicarbonate[ind1])
# BD from lactate
coefs2 = summary(mod_impute2)$coefficients
Imp_data$BD[ind2] = rnorm(n = sum(ind2),
mean = predict(mod_impute2, newdata = m[ind2,],allow.new.levels=T),
sd = coefs2[1,'Std. Error'] +
coefs2[2,'Std. Error']*m$lactate[ind2])
# BD from respiratory rate
coefs3 = summary(mod_impute3)$coefficients
Imp_data$BD[ind3] = rnorm(n = sum(ind3),
mean = predict(mod_impute3, newdata = m[ind3,],allow.new.levels=T),
sd = coefs3[1,'Std. Error'] +
coefs3[2,'Std. Error']*m$rr[ind3])
# BUN from creatinine
coefs4 = summary(mod_impute4)$coefficients
Imp_data$BUN[ind4] = exp(rnorm(n = sum(ind4),
mean = predict(mod_impute4, newdata = m[ind4,],allow.new.levels=T),
sd = coefs4[1,'Std. Error'] +
coefs4[2,'Std. Error']*m$creatinine[ind4]))
# HCT from Age
coefs5 = summary(mod_impute5)$coefficients
Imp_data$HCT[ind5] = rnorm(n = sum(ind5),
mean = predict(mod_impute5, newdata = m[ind5,],allow.new.levels=T),
sd = coefs5[1,'Std. Error'] +
coefs5[2,'Std. Error']*m$AgeInYear[ind5])
# BD from age
coefs6 = summary(mod_impute6)$coefficients
Imp_data$BD[ind6] = rnorm(n = sum(ind6),
mean = predict(mod_impute6, newdata = m[ind6,],allow.new.levels=T),
sd = coefs6[1,'Std. Error'] +
coefs6[2,'Std. Error']*m$AgeInYear[ind6])
# Coma from hypoglycaemia
coefs7 = summary(mod_impute7)$coefficients
Imp_data$coma[ind7] = rbinom(n = sum(ind7), size = 1,
predict(mod_impute7, newdata = m[ind7,],
allow.new.levels=T, type='response'))
# Parasitaemia from age
coefs8 = summary(mod_impute8)$coefficients
Imp_data$LPAR_pct[ind8] = rnorm(n = sum(ind8),
mean = predict(mod_impute8,
newdata = m[ind8,],
allow.new.levels=T),
sd = coefs8[1,'Std. Error'] +
coefs8[2,'Std. Error']*m$AgeInYear[ind8])
# Hypoglycaemia: marginal
coefs9 = summary(mod_impute9)$coefficients
Imp_data$hypoglycaemia[ind9] = rbinom(n = sum(ind9),size = 1,
prob = predict(mod_impute9,
newdata = m[ind9,],
allow.new.levels=T,
type='response'))
# BUN: marginal
coefs10 = summary(mod_impute10)$coefficients
Imp_data$BUN[ind10] = exp(rnorm(n = sum(ind10),
mean = predict(mod_impute10, newdata = m[ind10,],
allow.new.levels=T),
sd = coefs10[1,'Std. Error']))
m = Imp_data
vars = c('HCT','LPAR_pct','coma' ,'convulsions',
'poedema','BUN','BD' ,'shock','hypoglycaemia')
complete = apply(m[,vars], 1, function(x) sum(is.na(x))==0)
m = m[complete,]
mod0 = coxme(Surv(time=Timetodeathhrs, event=outcome,type = 'right') ~
HCT + coma + convulsions + poedema +
log2(BUN) + BD + shock + hypoglycaemia +
(1 | studyID) + (1 | country),
data = m)
summary(mod0)
mod0 = coxme(Surv(time=Timetodeathhrs, event=outcome,type = 'right') ~
HCT + coma + convulsions + poedema + LPAR_pct +
log2(BUN) + BD + shock + hypoglycaemia +
(1 | studyID) + (1 | country),
data = m)
summary(mod0)
?Surv
m$event = 1-m$outcome
mod0 = coxme(Surv(time=Timetodeathhrs, event=event,type = 'right') ~
HCT + coma + convulsions + poedema + LPAR_pct +
log2(BUN) + BD + shock + hypoglycaemia +
(1 | studyID) + (1 | country),
data = m)
View(m)
mod0 = coxme(Surv(time=Timetodeathhrs, event=outcome,type = 'right') ~
HCT + coma + convulsions + poedema + LPAR_pct +
log2(BUN) + BD + shock + hypoglycaemia +
(1 | studyID) + (1 | country),
data = m)
summary(mod0)
table(m$transfusion)
sum(is.na(m$transfusion))
table(m$studyID[is.na(m$transfusion)])
library(haven)
seaqmat = read_sav("~/Dropbox/Datasets/SEAQUAMAT/seaquamat stage 3.sav")
seaqmat$Unique_ID = apply(seaqmat, 1, function(x) paste(x['studyno'], 'SEAQUAMAT',sep='_'))
m = merge(m, seaqmat[c('Unique_ID','transfusion'], by='Unique_ID')
m = merge(m, seaqmat[,c('Unique_ID','transfusion')], by='Unique_ID')
View(m)
?merge
library(coxme)
CMAL=readstata13::read.dta13('~/Dropbox/Datasets/Malaria Core/DBallCore2016_V3.dta')
CMAL = CMAL[,c('StudyNumber','studyID','Timetodeathhrs')]
load('RData/Data.RData')
m$coma[is.na(m$coma) & m$studyID=='AQ'] = 0
m$Unique_ID = apply(m, 1, function(x) paste(x['StudyNumber'], x['studyID'],sep='_'))
CMAL$Unique_ID = apply(CMAL, 1, function(x) paste(x['StudyNumber'], x['studyID'],sep='_'))
m = merge(m, CMAL[,c('Unique_ID','Timetodeathhrs')], by='Unique_ID')
time_death_NA = is.na(m$Timetodeathhrs) & m$outcome==1
m = m[!time_death_NA, ]
m$LPAR_pct[is.infinite(m$LPAR_pct)] = 0
library(haven)
seaqmat = read_sav("~/Dropbox/Datasets/SEAQUAMAT/seaquamat stage 3.sav")
seaqmat$Unique_ID = apply(seaqmat, 1, function(x) paste(x['studyno'], 'SEAQUAMAT',sep='_'))
m = merge(m, seaqmat[,c('Unique_ID','transfusion')], by='Unique_ID')
m$transfusion = m$transfusion.x
m$transfusion[m$studyID=='SEAQUAMAT'] = m$transfusion.y[m$studyID=='SEAQUAMAT']
vars = c('HCT','LPAR_pct','coma' ,'convulsions',
'poedema','BUN','BD' ,'shock','hypoglycaemia', 'transfusion')
complete = apply(m[,vars], 1, function(x) sum(is.na(x))==0)
library(coxme)
CMAL=readstata13::read.dta13('~/Dropbox/Datasets/Malaria Core/DBallCore2016_V3.dta')
CMAL = CMAL[,c('StudyNumber','studyID','Timetodeathhrs')]
load('RData/Data.RData')
m$coma[is.na(m$coma) & m$studyID=='AQ'] = 0
m$Unique_ID = apply(m, 1, function(x) paste(x['StudyNumber'], x['studyID'],sep='_'))
CMAL$Unique_ID = apply(CMAL, 1, function(x) paste(x['StudyNumber'], x['studyID'],sep='_'))
m = merge(m, CMAL[,c('Unique_ID','Timetodeathhrs')], by='Unique_ID')
time_death_NA = is.na(m$Timetodeathhrs) & m$outcome==1
m = m[!time_death_NA, ]
m$LPAR_pct[is.infinite(m$LPAR_pct)] = 0
library(haven)
seaqmat = read_sav("~/Dropbox/Datasets/SEAQUAMAT/seaquamat stage 3.sav")
seaqmat$Unique_ID = apply(seaqmat, 1, function(x) paste(x['studyno'], 'SEAQUAMAT',sep='_'))
m = merge(m, seaqmat[,c('Unique_ID','transfusion')], by='Unique_ID')
m$transfusion = m$transfusion.x
m$transfusion[m$studyID=='SEAQUAMAT'] = m$transfusion.y[m$studyID=='SEAQUAMAT']
vars = c('HCT','LPAR_pct','coma' ,'convulsions',
'poedema','BUN','BD' ,'shock','hypoglycaemia', 'transfusion')
complete = apply(m[,vars], 1, function(x) sum(is.na(x))==0)
m = m[complete,]
load('RData/Data.RData')
m$coma[is.na(m$coma) & m$studyID=='AQ'] = 0
m$Unique_ID = apply(m, 1, function(x) paste(x['StudyNumber'], x['studyID'],sep='_'))
CMAL$Unique_ID = apply(CMAL, 1, function(x) paste(x['StudyNumber'], x['studyID'],sep='_'))
m = merge(m, CMAL[,c('Unique_ID','Timetodeathhrs')], by='Unique_ID')
time_death_NA = is.na(m$Timetodeathhrs) & m$outcome==1
m = m[!time_death_NA, ]
m$LPAR_pct[is.infinite(m$LPAR_pct)] = 0
m = merge(m, seaqmat[,c('Unique_ID','transfusion')], by='Unique_ID')
load('RData/Data.RData')
m$coma[is.na(m$coma) & m$studyID=='AQ'] = 0
m$Unique_ID = apply(m, 1, function(x) paste(x['StudyNumber'], x['studyID'],sep='_'))
CMAL$Unique_ID = apply(CMAL, 1, function(x) paste(x['StudyNumber'], x['studyID'],sep='_'))
m = merge(m, CMAL[,c('Unique_ID','Timetodeathhrs')], by='Unique_ID')
time_death_NA = is.na(m$Timetodeathhrs) & m$outcome==1
m = m[!time_death_NA, ]
m$LPAR_pct[is.infinite(m$LPAR_pct)] = 0
library(haven)
seaqmat = read_sav("~/Dropbox/Datasets/SEAQUAMAT/seaquamat stage 3.sav")
seaqmat$Unique_ID = apply(seaqmat, 1, function(x) paste(x['studyno'], 'SEAQUAMAT',sep='_'))
m = merge(m, seaqmat[,c('Unique_ID','transfusion')], by='Unique_ID', all = T)
m$transfusion = m$transfusion.x
m$transfusion[m$studyID=='SEAQUAMAT'] = m$transfusion.y[m$studyID=='SEAQUAMAT']
vars = c('HCT','LPAR_pct','coma' ,'convulsions',
'poedema','BUN','BD' ,'shock','hypoglycaemia', 'transfusion')
complete = apply(m[,vars], 1, function(x) sum(is.na(x))==0)
m = m[complete,]
hist(m$Timetodeathhrs)
table(m$Timetodeathhrs <4)
m = filter(m, Timetodeathhrs > 4)
m = filter(m, Timetodeathhrs > 8)
library(coxme)
CMAL=readstata13::read.dta13('~/Dropbox/Datasets/Malaria Core/DBallCore2016_V3.dta')
CMAL = CMAL[,c('StudyNumber','studyID','Timetodeathhrs')]
load('RData/Data.RData')
m$coma[is.na(m$coma) & m$studyID=='AQ'] = 0
m$Unique_ID = apply(m, 1, function(x) paste(x['StudyNumber'], x['studyID'],sep='_'))
CMAL$Unique_ID = apply(CMAL, 1, function(x) paste(x['StudyNumber'], x['studyID'],sep='_'))
m = merge(m, CMAL[,c('Unique_ID','Timetodeathhrs')], by='Unique_ID')
time_death_NA = is.na(m$Timetodeathhrs) & m$outcome==1
m = m[!time_death_NA, ]
m$LPAR_pct[is.infinite(m$LPAR_pct)] = 0
library(haven)
seaqmat = read_sav("~/Dropbox/Datasets/SEAQUAMAT/seaquamat stage 3.sav")
seaqmat$Unique_ID = apply(seaqmat, 1, function(x) paste(x['studyno'], 'SEAQUAMAT',sep='_'))
m = merge(m, seaqmat[,c('Unique_ID','transfusion')], by='Unique_ID', all = T)
m$transfusion = m$transfusion.x
m$transfusion[m$studyID=='SEAQUAMAT'] = m$transfusion.y[m$studyID=='SEAQUAMAT']
vars = c('HCT','LPAR_pct','coma' ,'convulsions',
'poedema','BUN','BD' ,'shock','hypoglycaemia', 'transfusion')
complete = apply(m[,vars], 1, function(x) sum(is.na(x))==0)
m = m[complete,]
m = filter(m, Timetodeathhrs > 8 | is.na(Timetodeathhrs))
DAG_fmla = "outcome ~ HCT + LPAR_pct + coma + convulsions + poedema +
log2(BUN) + BD + shock + hypoglycaemia + transfusion +
drug_AS + (1 | studyID) + (1 | country)"
# fit the model to each dataset
mod= glmer(DAG_fmla, data = m, family=binomial)
DAG_fmla = "outcome ~ HCT + LPAR_pct + coma + convulsions + poedema +
log2(BUN) + BD + shock + hypoglycaemia + transfusion +
(1 | studyID) + (1 | country)"
# fit the model to each dataset
mod= glmer(DAG_fmla, data = m, family=binomial)
summary(mod)
summary(mod)
library(coxme)
CMAL=readstata13::read.dta13('~/Dropbox/Datasets/Malaria Core/DBallCore2016_V3.dta')
CMAL = CMAL[,c('StudyNumber','studyID','Timetodeathhrs')]
load('RData/Data.RData')
m$drug_AS = 0
m$drug_AS[m$drug_class=='artemisinin']=1
m$coma[is.na(m$coma) & m$studyID=='AQ'] = 0
m$Unique_ID = apply(m, 1, function(x) paste(x['StudyNumber'], x['studyID'],sep='_'))
CMAL$Unique_ID = apply(CMAL, 1, function(x) paste(x['StudyNumber'], x['studyID'],sep='_'))
m = merge(m, CMAL[,c('Unique_ID','Timetodeathhrs')], by='Unique_ID')
time_death_NA = is.na(m$Timetodeathhrs) & m$outcome==1
m = m[!time_death_NA, ]
m$LPAR_pct[is.infinite(m$LPAR_pct)] = 0
library(haven)
seaqmat = read_sav("~/Dropbox/Datasets/SEAQUAMAT/seaquamat stage 3.sav")
seaqmat$Unique_ID = apply(seaqmat, 1, function(x) paste(x['studyno'], 'SEAQUAMAT',sep='_'))
m = merge(m, seaqmat[,c('Unique_ID','transfusion')], by='Unique_ID', all = T)
m$transfusion = m$transfusion.x
m$transfusion[m$studyID=='SEAQUAMAT'] = m$transfusion.y[m$studyID=='SEAQUAMAT']
vars = c('HCT','LPAR_pct','coma' ,'convulsions',
'poedema','BUN','BD' ,'shock','hypoglycaemia', 'transfusion')
complete = apply(m[,vars], 1, function(x) sum(is.na(x))==0)
m = m[complete,]
m = filter(m, Timetodeathhrs > 4 | is.na(Timetodeathhrs))
DAG_fmla = "outcome ~ HCT + LPAR_pct + coma + convulsions + poedema +
log2(BUN) + BD + shock + hypoglycaemia + transfusion +
drug_AS + (1 | studyID) + (1 | country)"
# fit the model to each dataset
mod= glmer(DAG_fmla, data = m, family=binomial)
summary(mod)
