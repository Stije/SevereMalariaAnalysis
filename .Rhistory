mod_HCT_BD = gam(formula = BD ~ s(HCT) + s(studyID, bs='re') +
s(country, bs='re'),
data = Leg_data_complete)
mod_BD_LPAR = gam(formula = BD ~ s(LPAR_pct) + s(studyID, bs='re') +
s(country, bs='re'),
data =Leg_data_complete)
mod_BUN_BD = gam(formula = BD ~ s(log10(BUN)) + s(studyID, bs='re') +
s(country, bs='re'),
data =Leg_data_complete)
mycols = brewer.pal(length(unique(m$studyID)), 'Set1')
Leg_data_complete$color = as.character(revalue(Leg_data_complete$studyID,
replace = c('Core Malaria'=mycols[1],
'AAV'=mycols[2],
'AQ'=mycols[3],
'SEAQUAMAT' = mycols[4],
'AQUAMAT' = mycols[5],
'QC' = mycols[6])))
par(las=1, mfrow=c(2,2), mar=c(4,4,1,1), bty='n')
## Base Excess and HCT
plot(jitter(Leg_data_complete$HCT,amount = .4),
jitter(Leg_data_complete$BD, amount = .4), ylim=c(-6,28),
col=Leg_data_complete$color, pch='*', xlab='',
ylab='Base deficit (mEq/L)', xlim=c(8,47), panel.first = grid())
mtext(text = 'Haematocrit (%)',side = 1,line = 2.5)
ys = predict(object = mod_HCT_BD,
newdata = data.frame(HCT=8:50,
studyID='AQ',
country='Vietnam'),
exclude = c("s(country)","s(studyID)"))
lines(8:50, ys, lwd=3, col='black')
## Parasitaemia and Anaemia
plot(Leg_data_complete$LPAR_pct,
jitter(Leg_data_complete$BD,amount = .4),
xlim = c(-2.418006, 1.562435),ylim=c(-6,28),
col=Leg_data_complete$color, pch='*',
xlab='', panel.first = grid(),
ylab='Base deficit (mEq/L)', xaxt='n')
axis(1, at = log10(c(30,10,1,.1,.01)), labels = c(30,10,1,.1,.01))
mtext(text = 'Parasitised RBCs (%)',side = 1,line = 2.5)
ys = predict(object = mod_BD_LPAR,
newdata = data.frame(LPAR_pct=seq(-3,log10(50),by=.1),
studyID='AQ',
country='Vietnam'),
exclude = c("s(country)","s(studyID)"))
lines(seq(-3,log10(50),by=.1), ys, lwd=3, col='black')
## BUN and BD
plot(jitter(log10(Leg_data_complete$BUN),amount = .4),
jitter(Leg_data_complete$BD, amount = .4), ylim=c(-6,28),
col=Leg_data_complete$color, pch='*', panel.first = grid(),
xlab='',xlim = c(0.4771213,2.1461280),
ylab='Base deficit (mEq/L)', xaxt='n')
mtext(text = 'Blood urea nitrogen (mmol/L)',side = 1,line = 2.5)
axis(1, at=c(log10(3), log10(5), 1, log10(30),2), labels = c(3,5,10,30,100))
summary(mod_BUN_BD)
ys = predict(object = mod_BUN_BD,
newdata = data.frame(BUN=2:166,
studyID='AQ',
country='Vietnam'),
exclude = c("s(country)","s(studyID)"))
lines(log10(2:166), ys, lwd=3, col='black')
## Parasitaemia and Anaemia
plot(jitter(Leg_data_complete$AgeInYear,amount=.4),
jitter(Leg_data_complete$HCT,amount = .4),
col=Leg_data_complete$color, pch='*',
xlab='', ylim=c(8,47), panel.first = grid(),
ylab='Haematocrit (%)', xlim = c(0,65))
mtext(text = 'Age (years)',side = 1,line = 2.5)
summary(mod_Age_HCT)
ys = predict(object = mod_Age_HCT,
newdata = data.frame(AgeInYear=0:80,
studyID='AQ',
country='Vietnam'),
exclude = c("s(country)","s(studyID)"))
lines(0:80, ys, lwd=3, col='black')
legend('bottomright',col=mycols,inset = 0.01,
legend = c('Core Malaria',
'AAV',
'AQ',
'SEAQUAMAT',
'AQUAMAT','QC'),pch='*')
modHCT=gam(outcome ~ s(HCT) + s(studyID, bs='re') + s(country, bs='re'),
data = Leg_data_complete, family='binomial')
modcoma=gam(outcome ~ coma + s(studyID, bs='re') + s(country, bs='re'),
data = Leg_data_complete, family='binomial')
modBD=gam(outcome ~ s(BD) + s(studyID, bs='re') + s(country, bs='re'),
data = Leg_data_complete, family='binomial')
modpoedema=gam(outcome ~ poedema + s(studyID, bs='re') + s(country, bs='re'),
data = Leg_data_complete, family='binomial')
modconv=gam(outcome ~ convulsions + s(studyID, bs='re') + s(country, bs='re'),
data = Leg_data_complete, family='binomial')
modshock=gam(outcome ~ shock + s(studyID, bs='re') + s(country, bs='re'),
data = Leg_data_complete, family='binomial')
modBUN=gam(outcome ~ s(log10(BUN)) + s(studyID, bs='re') + s(country, bs='re'),
data = Leg_data_complete, family='binomial')
modLPAR_pct=gam(outcome ~ s(LPAR_pct) + s(studyID, bs='re') + s(country, bs='re'),
data = Leg_data_complete, family='binomial')
par(las=1, bty='n', mfrow=c(2,4))
Factors = c('HCT','coma','BD','poedema','convulsions','BUN')
x_hcts = seq(10,45, by=1)
x_comas = 0:1
x_shock = 0:1
x_conv = 0:1
x_poedema = 0:1
x_bd = seq(-5,35, by=2)
x_BUN = 2:150
x_parasites = seq(-2,log10(30),by=.001)
#************** BD
predsBD = predict(modBD, newdata = data.frame(BD= x_bd,
studyID='AQ',
country='Thailand'),
exclude = c("s(country)","s(studyID)"),
se.fit=T)
plot(x_bd, 100*inv.logit(predsBD$fit), ylab='mortality (%)',
panel.first = grid(), xlab='',
type='l', lwd=3,ylim = c(0,80))
mtext(text = 'Base deficit (mEq/L)',side = 1,line = 2.5, cex=.7)
polygon(c(x_bd, rev(x_bd)), 100*inv.logit(c(predsBD$fit + 1.96*predsBD$se.fit,
rev(predsBD$fit - 1.96*predsBD$se.fit))),
lty=2,lwd=2, border = NA, col = rgb(0, 0, 1,0.5))
#************** HCT
predsHCT = predict(modHCT,
newdata = data.frame(HCT=x_hcts,
studyID='AQ',
country='Thailand'),
exclude = c("s(country)","s(studyID)"),
se.fit=T)
plot(x_hcts, 100*inv.logit(predsHCT$fit), ylab='mortality (%)',
panel.first = grid(), xlab='',
type='l', lwd=3,ylim = c(0,25))
mtext(text = 'Haematocrit (%)',side = 1,line = 2.5,cex=.7)
polygon(c(x_hcts,rev(x_hcts)),
100*inv.logit(c(predsHCT$fit + 1.96*predsHCT$se.fit,
rev(predsHCT$fit - 1.96*predsHCT$se.fit))),
lty=2,lwd=2,border = NA, col = rgb(0, 0, 1,0.5))
#************** BUN
predsBUN = predict(modBUN, newdata = data.frame(BUN=x_BUN,
studyID='AQ',
country='Thailand'),
exclude = c("s(country)","s(studyID)"),
se.fit=T)
plot(log10(x_BUN), 100*inv.logit(predsBUN$fit), ylab='mortality (%)',
xlab='', panel.first = grid(),
type='l', lwd=3,ylim = c(0,60), xaxt='n')
mtext(text = 'Blood urea nitrogen (mmol/L)',side = 1,line = 2.5,cex=.7)
axis(1, at = log10(c(2,10,100)), labels = c(2,10,100))
polygon(c(log10(x_BUN),rev(log10(x_BUN))),
100*inv.logit(c(predsBUN$fit + 1.96*predsBUN$se.fit,
rev(predsBUN$fit - 1.96*predsBUN$se.fit))),
lty=2,lwd=2, border = NA, col = rgb(0, 0, 1,0.5))
#************** Log10 parasitaemia
predspara_PCT = predict(modLPAR_pct, newdata = data.frame(LPAR_pct=x_parasites,
studyID='AQ',
country='Thailand'),
exclude = c("s(country)","s(studyID)"),
se.fit=T)
plot(x_parasites, 100*inv.logit(predspara_PCT$fit), ylab='mortality (%)',
xlab='', panel.first = grid(),
type='l', lwd=3,ylim = c(0,25), xaxt='n')
mtext(text = 'Parasitized RBCs (%)',side = 1,line = 2.5,cex=.7)
axis(1, at = c(-2,-1,0,log10(30)), labels = c(0.01,0.1,1,30))
axis(1, at = log10(c(10,20)), labels = NA)
polygon(c(x_parasites,rev(x_parasites)),
100*inv.logit(c(predspara_PCT$fit + 1.96*predspara_PCT$se.fit,
rev(predspara_PCT$fit - 1.96*predspara_PCT$se.fit))),
lty=2,lwd=2, border = NA, col = rgb(0, 0, 1,0.5))
#**************  Coma
predscoma = predict(modcoma, newdata = data.frame(coma=x_comas,
studyID='AQ',
country='Thailand'),
exclude = c("s(country)","s(studyID)"),
se.fit=T)
plot(x_comas, 100*inv.logit(predscoma$fit), ylab='mortality (%)',
panel.first = grid(), xlab='',
type='p', lwd=3, ylim = c(0,28), xaxt='n',
pch=19, xlim = c(-.25,1.25))
axis(1, at=x_comas, labels = c('No Coma','Coma'),
tick = F,line = .5,cex.axis=.9)
ys = 100*inv.logit(c(predscoma$fit - 1.96*predscoma$se.fit,
predscoma$fit + 1.96*predscoma$se.fit))
arrows(x0 = x_comas[1],y0 = ys[1], x1 = x_comas[1], y1 = ys[3],
angle = 90,lwd=6,code = 3,length=0,col = rgb(0, 0, 1,0.5))
arrows(x0 = x_comas[2],y0 = ys[2], x1 = x_comas[2], y1 = ys[4],
angle = 90,lwd=6,code = 3,length=0,col = rgb(0, 0, 1,0.5))
#************** Convulsions
predsconv = predict(modconv, newdata = data.frame(convulsions=x_conv,
studyID='AQ',
country='Thailand'),
exclude = c("s(country)","s(studyID)"),
se.fit=T)
plot(x_conv, 100*inv.logit(predsconv$fit),
panel.first = grid(), ylab='mortality (%)', xlab='',
type='p', lwd=3, ylim = c(0,23), xaxt='n',
pch=19, xlim = c(-.25,1.25))
axis(1, at=x_conv, labels = c('No seizures','Seizures'),
tick = F,line = .5,cex.axis=.9)
ys = 100*inv.logit(c(predsconv$fit + 1.96*predsconv$se.fit,
predsconv$fit -1.96*predsconv$se.fit))
arrows(x0 = x_conv[1],y0 = ys[1], x1 = x_conv[1], y1 = ys[3],angle = 90,
lwd=6,code = 3,length=0,col = rgb(0, 0, 1,0.5))
arrows(x0 = x_conv[2],y0 = ys[2], x1 = x_conv[2], y1 = ys[4],angle = 90,
lwd=6,code = 3,length=0,col = rgb(0, 0, 1,0.5))
#************** Pulmonary Oedema
predspoedema = predict(modpoedema,
newdata = data.frame(poedema=x_poedema,
studyID='AQ',
country='Thailand'),
exclude = c("s(country)","s(studyID)"),
se.fit=T)
plot(x_poedema, 100*inv.logit(predspoedema$fit),
panel.first = grid(), ylab='mortality (%)', xlab='',
type='p', lwd=3, ylim = c(0,30), xaxt='n',
pch=19, xlim = c(-.25,1.25))
axis(1, at=x_poedema, labels = c('No\nPulmonary\nOedema','Pulmonary\nOedema'),
tick = F,line = 1.5,cex.axis=.9)
ys = 100*inv.logit(c(predspoedema$fit + 1.96*predspoedema$se.fit,
(predspoedema$fit - 1.96*predspoedema$se.fit)))
arrows(x0 = x_poedema[1],y0 = ys[1], x1 = x_poedema[1], y1 = ys[3],angle = 90,
lwd=6,code = 3,length=0,col = rgb(0, 0, 1,0.5))
arrows(x0 = x_poedema[2],y0 = ys[2], x1 = x_poedema[2], y1 = ys[4],angle = 90,
lwd=6,code = 3,length=0,col = rgb(0, 0, 1,0.5))
#************** Shock
predsshock = predict(modshock,
newdata = data.frame(shock=x_shock,
studyID='AQ',
country='Thailand'),
exclude = c("s(country)","s(studyID)"),
se.fit=T)
plot(x_shock, 100*inv.logit(predsshock$fit),
panel.first = grid(), ylab='mortality (%)', xlab='',
type='p', lwd=3, ylim = c(0,27), xaxt='n',
pch=19, xlim = c(-.25,1.25))
axis(1, at=x_shock, labels = c('No shock','Shock'),
tick = F,line = 1.5,cex.axis=.9)
ys = 100*inv.logit(c(predsshock$fit + 1.96*predsshock$se.fit,
(predsshock$fit - 1.96*predsshock$se.fit)))
arrows(x0 = x_shock[1],y0 = ys[1], x1 = x_shock[1], y1 = ys[3],angle = 90,
lwd=6,code = 3,length=0,col = rgb(0, 0, 1,0.5))
arrows(x0 = x_shock[2],y0 = ys[2], x1 = x_shock[2], y1 = ys[4],angle = 90,
lwd=6,code = 3,length=0,col = rgb(0, 0, 1,0.5))
writeLines('\nComa risk ratio calculations:\n')
riskratio(x = table(Leg_data_complete$coma,Leg_data_complete$outcome),method = 'wald')
writeLines('\nShock risk ratio calculations:\n')
riskratio(x = table(Leg_data_complete$shock,Leg_data_complete$outcome),method = 'wald')
writeLines('\nConvulsions risk ratio calculations:\n')
riskratio(x = table(Leg_data_complete$convulsions,Leg_data_complete$outcome),method = 'wald')
writeLines('\nPulmonary oedema risk ratio calculations:\n')
riskratio(x = table(Leg_data_complete$poedema,Leg_data_complete$outcome),method = 'wald')
par(las=1, bty='n')
f=ecdf(m$HCT[m$continent=="Africa"])
f2=ecdf(m$HCT[m$continent=="Asia"])
plot(5:50, 100*f(5:50), xlim=c(5,50), main='', lwd=2,xlab='Haematocrit (%)',
xaxt='n',ylab='Cumulative proportion (%)',type='l',col='blue')
lines(5:50, 100*f2(5:50), col='green',lwd=2)
axis(1, at = c(5,10,15,20,25,35,45))
f_inverse = approxfun(x = f(1:50),y = 1:50)
f2_inverse = approxfun(x = f2(1:50),y = 1:50)
lines(c(-10, f2_inverse(.1)), c(10,10), lty=2)
lines(c(-10, f2_inverse(.5)), c(50,50), lty=2)
lines(c(f2_inverse(.5),f2_inverse(.5)), c(-10,50), lty=2)
lines(c(f_inverse(.5),f_inverse(.5)), c(-10,50), lty=2)
lines(c(f2_inverse(.1),f2_inverse(.1)), c(-10,10), lty=2)
lines(c(f_inverse(.1),f_inverse(.1)), c(-10,10), lty=2)
legend('bottomright',col=c('green','blue'),inset = 0.01,
legend = c('Asian data','African data'),lwd=3)
vars_interest = c('outcome','HCT','LPAR_pct','coma','convulsions','poedema',
'BUN','BD','shock','hypoglycaemia',
'studyID','country')
complete_cases = apply(m[,vars_interest], 1, function(x) sum(is.na(x))) == 0
Complete_Leg_data = m[complete_cases,]
Complete_Leg_data$studyID = as.factor(as.character(Complete_Leg_data$studyID))
DAG_fmla = "outcome ~ HCT + LPAR_pct + coma + convulsions + poedema +
log2(BUN) + BD + shock + hypoglycaemia +
drug_AS + (1 | studyID) + (1 | country)"
# fit the model to each dataset
mod1 = glmer(formula = DAG_fmla, data = Complete_Leg_data,
family=binomial)
summary(mod1)
# The scalar multiples to put the AORs on the correct scales
# Compute 95% CIs
FixedEffs = as.data.frame(summary(mod1)$coefficients)
FixedEffs$Scalar_f = c(1,10, 1, 1, 1, 1,log2(3), 10, 1, 1,1)
Results = data.frame(lowerCI = exp(FixedEffs$Scalar_f*(FixedEffs$Estimate -
1.96*FixedEffs$`Std. Error`)),
mean = exp(FixedEffs$Scalar_f*(FixedEffs$Estimate)),
upperCI = exp(FixedEffs$Scalar_f*(FixedEffs$Estimate +
1.96*FixedEffs$`Std. Error`)))
rownames(Results) = rownames(FixedEffs)
plotting_ind = rownames(Results) %in% c('BD','coma','convulsions1','LPAR_pct',
'drug_AS','HCT','log2(BUN)','poedema1','shock1')
Results = Results[plotting_ind,]
Results$Y_Labels = c('-10 % points\nabsolute haematocrit\non admission',
'Tenfold increase\nin parasitaemia',
'Coma\non admission',
'Seizures\non admission',
'Pulmonary\nOedema\non admission',
'3 fold increase\nin blood urea\nnitrogen (mmol/L)',
'+10 mEq/L\nbase deficit',
'Shock\non admission',
'Artemisinin drug\nversus\nnon Artemisinin drug'
)
Results['HCT',1:3] = 1/Results['HCT',1:3]
x_ind = sort.int(Results$mean, index.return = T)$ix
Results = Results[x_ind,]
par(bty='n', las=1, mar = c(3,9,2,2))
print(Results)
xlims = c(0.5, 8.5)
plot(NA,NA, xlim= log2(xlims), ylim = c(0,1),xaxt='n',
xlab='', ylab='', yaxt='n')
axis(1, at = log2(c(0.5,1, 2,4)), labels = c(0.5,1, 2,4))
abline(v=0, lty=2, lwd=3, col='red')
yindex =1
ypos = seq(0,1,length.out = sum(plotting_ind))
for(i in 1:nrow(Results)){
arrows(log2(Results[i,'lowerCI']),ypos[yindex],
log2(Results[i,'upperCI']),ypos[yindex],
length=0.0, angle=90, code=3,
col = 'black',lwd=3)
points(log2(Results[i,'mean']),ypos[yindex],pch=18,cex=2)
yindex=yindex+1
}
abline(h=ypos, lty=3)
axis(side = 2, at = ypos, labels = Results$Y_Labels,tick=FALSE)
mtext(side=1, line = 2, text = 'Adjusted odds ratio')
mtext(side = 3, line = 1, text = 'Increased survival',adj = 0)
mtext(side = 3, line = 1, text = 'Decreased survival',adj = 1)
load('RData/Multiple_Imputed_Datasets.RData')
for (i in 1:length(SM_Impute_List)){
SM_Impute_List[[i]] = filter(SM_Impute_List[[i]], HCT > 9)
}
if(RUN_MODELS){
# the model formula
DAG_fmla = "outcome ~ HCT + LPAR_pct + coma + convulsions + poedema +
log2(BUN) + BD + shock + hypoglycaemia +
drug_AS + (1 | continent/country)"
# fit the model to each dataset
modList= glmerModList(DAG_fmla, data = SM_Impute_List,
family=binomial,parallel = T)
# save the output
save(modList, file = 'RData/Models_List_Remove_Hb_less_10.RData')
} else {
load('RData/Models_List_Remove_Hb_less_10.RData')
}
# extract the fixed and random effects from all the model fits
# These functions then compute the overall estimates
FixedEffs = modelFixedEff(modList)
RandEffs = modelRandEffStats(modList)
print(FixedEffs)
print(RandEffs)
FixedEffs$Scalar_f = as.numeric(mapvalues(x = FixedEffs$term,
from = c("(Intercept)",
"BD",
"coma",
"convulsions1",
"drug_AS",
"HCT",
"hypoglycaemia",
"log2(BUN)",
"LPAR_pct",
"shock1",
"poedema1"),
to = as.numeric(c(1, 7, 1, 1, 1, 10, 1,2,log10(6),1, 1))))
FixedEffs$std.error=as.numeric(FixedEffs$std.error)
FixedEffs$estimate=as.numeric(FixedEffs$estimate)
# Compute 95% CIs
Results = data.frame(lowerCI = exp(FixedEffs$Scalar_f*(FixedEffs$estimate -
1.96*FixedEffs$std.error)),
mean = exp(FixedEffs$Scalar_f*(FixedEffs$estimate)),
upperCI = exp(FixedEffs$Scalar_f*(FixedEffs$estimate +
1.96*FixedEffs$std.error)))
rownames(Results) = FixedEffs$term
writeLines(sprintf('Standard deviation of base deficit in patient population is %s',
round(sd(m$BD,na.rm=T))))
writeLines(sprintf('Standard deviation of blood urea nitrogen in patient population is %s',
round(2^sd(log2(m$BUN),na.rm=T))))
writeLines(sprintf('Standard deviation of parasitised RBCs in patient population is %s',
round(10^sd(m$LPAR_pct,na.rm=T))))
writeLines(sprintf('Standard deviation of haematocrits in patient population is %s',
round(sd(m$HCT,na.rm=T))))
Results = Results[rownames(Results) %in% c('BD','coma','convulsions1','drug_AS','HCT',
'log2(BUN)','poedema1','LPAR_pct','shock1'),]
Results$Names =mapvalues(rownames(Results),
from = c("drug_AS",
"HCT",
"LPAR_pct",
"convulsions1",
"shock1",
"poedema1",
"log2(BUN)",
"BD",
"coma"),
to = c('Artemisinin drug\nversus\nnon Artemisinin drug',
'-10 % points\nabsolute haematocrit\non admission',
'Six fold increase\n in parasitised\nred blood cells',
'Seizures\non admission',
'Shock\non admission',
'Pulmonary\noedema\non admission',
'Two fold increase\nin blood urea\nnitrogen (mmol/L)',
'+7 mEq/L\nbase deficit',
'Coma\non admission'))
Results['HCT',c("lowerCI","mean","upperCI")] = 1/Results['HCT',c("lowerCI","mean","upperCI")]
Results = arrange(Results, mean)
print(cbind(Results[,'Names'],round(Results[,c("lowerCI","mean","upperCI")],2)))
par(bty='n', las=1, mar = c(4,9,2,2))
xlims = c(0.5, 4.5)
plot(NA,NA, xlim= log2(xlims), ylim = c(0,1),xaxt='n',
xlab='', ylab='', yaxt='n')
abline(v= seq(-1,3,by=1),col = "lightgray", lty = "dotted",lwd = par("lwd"))
axis(1, at = log2(c(0.5,1, 2,4)), labels = c(0.5,1, 2,4))
abline(v=0, lty=2, lwd=3, col='red')
yindex =1
ypos = seq(0,1,length.out = nrow(Results))
for(i in 1:nrow(Results)){
arrows(log2(Results[i,'lowerCI']),ypos[yindex],
log2(Results[i,'upperCI']),ypos[yindex],
length=0.0, angle=90, code=3,
col = 'black',lwd=3)
points(log2(Results[i,'mean']),ypos[yindex],pch=18,cex=2)
yindex=yindex+1
}
abline(h=ypos, lty=3)
axis(side = 2, at = ypos, labels = Results$Names,tick=FALSE)
mtext(side=1, line = 2.5, text = 'Adjusted odds ratio')
mtext(side = 3, line = 1, text = 'Increased survival',adj = 0)
mtext(side = 3, line = 1, text = 'Decreased survival',adj = 1)
table(m$transfusion,m$studyID,useNA = 'ifany')
load('RData/Multiple_Imputed_Datasets.RData')
for(i in 1:length(SM_Impute_List)){
SM_Impute_List[[i]] = filter(SM_Impute_List[[i]], studyID%in%c('AQUAMAT','AAV','AQ'))
}
DAG_fmla = "outcome ~ HCT + LPAR_pct + coma + convulsions + poedema +
log2(BUN) + BD + shock + hypoglycaemia + transfusion +
drug_AS + (1 | country)"
if(RUN_MODELS){
# fit the model to each dataset
modList = glmerModList(DAG_fmla, data = SM_Impute_List,
family=binomial,parallel = T)
# save the output
save(modList, file = 'RData/ModelList_transfusion_Naive.RData')
} else {
load('RData/ModelList_transfusion_Naive.RData')
}
FixedEffs = modelFixedEff(modList)
print(FixedEffs)
FixedEffs$Scalar_f = as.numeric(mapvalues(x = FixedEffs$term,
from = c("(Intercept)", "BD","coma", "convulsions1",
"drug_AS","HCT","hypoglycaemia", "log2(BUN)",
"LPAR_pct","shock1","poedema1", "transfusion"),
to = as.numeric(c(1, 7, 1, 1, 1,
10, 1,2,log10(6),1, 1,1))))
FixedEffs$std.error=as.numeric(FixedEffs$std.error)
FixedEffs$estimate=as.numeric(FixedEffs$estimate)
# Compute 95% CIs
Results = data.frame(lowerCI = exp(FixedEffs$Scalar_f*(FixedEffs$estimate -
1.96*FixedEffs$std.error)),
mean = exp(FixedEffs$Scalar_f*(FixedEffs$estimate)),
upperCI = exp(FixedEffs$Scalar_f*(FixedEffs$estimate +
1.96*FixedEffs$std.error)))
rownames(Results) = FixedEffs$term
Results['HCT',1:3] = 1/Results['HCT',1:3]
Results$Names =mapvalues(rownames(Results),
from = c("drug_AS","HCT","LPAR_pct","convulsions1","shock1",
"poedema1","log2(BUN)","BD", "coma","transfusion"),
to = c('Artemisinin drug\nversus\nnon Artemisinin drug',
'-10 % points\nabsolute haematocrit\non admission',
'Six fold increase\n in parasitised\nred blood cells',
'Seizures\non admission',
'Shock\non admission',
'Pulmonary\noedema\non admission',
'Two fold increase\nin blood urea\nnitrogen (mmol/L)',
'+7 mEq/L\nbase deficit',
'Coma\non admission','Transfusion'))
plotting_ind = rownames(Results) %in% c('BD','coma','convulsions1','LPAR_pct','transfusion',
'drug_AS','HCT','log2(BUN)','poedema1','shock1')
Results = Results[plotting_ind,]
x_ind = sort.int(Results$mean, index.return = T)$ix
Results = Results[x_ind,]
par(bty='n', las=1, mar = c(3,9,2,2))
print(Results)
xlims = c(0.5, 8.5)
plot(NA,NA, xlim= log2(xlims), ylim = c(0,1),xaxt='n',
xlab='', ylab='', yaxt='n')
axis(1, at = log2(c(0.5,1, 2,4)), labels = c(0.5,1, 2,4))
abline(v=0, lty=2, lwd=3, col='red')
yindex =1
ypos = seq(0,1,length.out = sum(plotting_ind))
for(i in 1:nrow(Results)){
arrows(log2(Results[i,'lowerCI']),ypos[yindex],
log2(Results[i,'upperCI']),ypos[yindex],
length=0.0, angle=90, code=3,
col = 'black',lwd=3)
points(log2(Results[i,'mean']),ypos[yindex],pch=18,cex=2)
yindex=yindex+1
}
abline(h=ypos, lty=3)
axis(side = 2, at = ypos, labels = Results$Names,tick=FALSE)
mtext(side=1, line = 2, text = 'Adjusted odds ratio')
mtext(side = 3, line = 1, text = 'Increased survival',adj = 0)
mtext(side = 3, line = 1, text = 'Decreased survival',adj = 1)
hist(m$Timetodeathhrs, seq(0,400,by=1), xlim = c(0,24))
hist(m$Timetodeathhrs, seq(0,800,by=1), xlim = c(0,24))
hist(m$Timetodeathhrs, seq(0,8000,by=1), xlim = c(0,24))
table(m$StudyNumber)
table(m$studyID)
m = filter(studyID != 'SEAQUAMAT')
m = filter(m,studyID != 'SEAQUAMAT')
hist(m$Timetodeathhrs, seq(0,8000,by=1), xlim = c(0,24))
hist(m$Timetodeathhrs, seq(0,8000,by=1), xlim = c(0,5*24))
m = filter(m,studyID == 'AQUAMAT')
hist(m$Timetodeathhrs, seq(0,8000,by=1), xlim = c(0,5*24))
sum(!is.na(m$Timetodeathhrs) & m$Timetodeathhrs<4)
sum(!is.na(m$Timetodeathhrs) & m$Timetodeathhrs<=4)
sum(!is.na(m$Timetodeathhrs))
